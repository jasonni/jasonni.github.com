<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[F2E Big Bang !!!]]></title>
  <link href="http://jasonni.github.io/atom.xml" rel="self"/>
  <link href="http://jasonni.github.io/"/>
  <updated>2014-08-07T16:18:59+08:00</updated>
  <id>http://jasonni.github.io/</id>
  <author>
    <name><![CDATA[Jason Ni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ExoPlayer 筆記]]></title>
    <link href="http://jasonni.github.io/blog/2014/08/05/exoplayer-bi-ji/"/>
    <updated>2014-08-05T15:21:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2014/08/05/exoplayer-bi-ji</id>
    <content type="html"><![CDATA[<h2>ExoPlayer &ndash; An application level media player for Android</h2>

<p><img src="http://jasonni.github.io/images/exo_open_url.png" alt="exoplayer-url" /></p>

<h3>Before ExoPlayer</h3>

<p>之前 MediaPlayer 的用法</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">MediaPlayer</span> <span class="n">player</span> <span class="o">=</span> <span class="n">MediaPlayer</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">ctx</span><span class="o">,</span> <span class="n">uri</span><span class="o">,</span> <span class="n">display</span><span class="o">);</span>
</span><span class='line'><span class="n">player</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="n">player</span><span class="o">.</span><span class="na">release</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://jasonni.github.io/images/exo_mp_framework.png" alt="mediaplayer-framework" /></p>

<p>MediaPlayer 隱藏很多的細節</p>

<p>方便使用卻難以客制化</p>

<p>例如自訂 buffer policy 或 cache</p>

<p>在 Jelly Bean 版本</p>

<p>Google 提供 MediaExtractor，MediaCodec and AudioTrack low-level API</p>

<p><img src="http://jasonni.github.io/images/exo_low_level_lib.png" alt="exo-low-level" /></p>

<p>讓 media player 方便去做客制化</p>

<p><img src="http://jasonni.github.io/images/exo_high_level_lib.png" alt="exo-high-level" /></p>

<h3>What&rsquo;s DASH</h3>

<p><a href="http://en.wikipedia.org/wiki/Dynamic_Adaptive_Streaming_over_HTTP">DASH</a></p>

<p>允許在播放的期間，依照網路速度調整影片的品質</p>

<h3>ExoPlayer Benefit</h3>

<ul>
<li>Youtube use</li>
<li>支援 Dynamic adaptive streaming over HTTP (DASH) and SmoothStreaming playback</li>
<li>DRM 保護</li>
<li>ExoPlayer gives a lot more control</li>
<li>ExoPlayer can easily update</li>
</ul>


<p><img src="http://jasonni.github.io/images/exo_vs_mplayer.png" alt="exo vs mediaplayer" /></p>

<ul>
<li>減少啟動播放的延遲時間約 65%</li>
<li>重新 buffer 的機率少了 40%</li>
<li>平均播放高解析度影片的機率多了 11%</li>
</ul>


<h3>核心</h3>

<p><a href="http://developer.android.com/reference/android/media/MediaExtractor.html">MediaExtractor</a>
和
<a href="http://developer.android.com/reference/android/media/MediaCodec.html">MediaCodec</a></p>

<p><img src="http://jasonni.github.io/images/exo_framework.png" alt="exoplayer-framework" />
<img src="http://developer.android.com/images/exoplayer/object-model.png" alt="exoplayer-model" /></p>

<h3>提供</h3>

<h4>TrackRenderer</h4>

<p>一個 abstract class</p>

<p><em>負責處理 video，audio 或 text 的播放</em></p>

<p>ExoPlayer library 提供這些 implements class：</p>

<ul>
<li><strong>MediaCodecVideoTrackRenderer</strong> as the default implementations rendering video</li>
<li><strong>MediaCodecAudioTrackRenderer</strong> for audio</li>
<li><strong>TextTrackRenderer</strong> for text</li>
</ul>


<h4>SampleSource</h4>

<p>TrackRenderer 需要 <strong>SampleSource</strong> (interface)</p>

<p><em>它負責提供 格式資訊 和 media sample</em></p>

<p>ExoPlayer library 提供這些 implements class：</p>

<ul>
<li><strong>FrameworkSampleSource</strong> 使用 MediaExtractor 來 request，buffer 和解析 media sample!
<a href="http://developer.android.com/images/exoplayer/frameworksamplesource.png">FrameworkSampleSource</a></li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>  <span class="kt">int</span> <span class="n">numRenderer</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
</span><span class='line'>  <span class="n">FrameworkSampleSource</span> <span class="n">sampleSource</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FrameworkSampleSource</span><span class="o">(</span><span class="n">activity</span><span class="o">,</span> <span class="n">uri</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
</span><span class='line'>  <span class="n">MediaCodecVideoTrackRenderer</span> <span class="n">videoRenderer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MediaCodecVideoTrackRenderer</span><span class="o">(</span><span class="n">sampleSource</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="n">MediaCodec</span><span class="o">.</span><span class="na">VIDEO_SCALING_MODE_SCALE_TO_FIT</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">mainHandler</span><span class="o">,</span> <span class="n">playerActivity</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>
</span><span class='line'>  <span class="n">MediaCodecAudioTrackRenderer</span> <span class="n">audioRenderer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MediaCodecAudioTrackRenderer</span><span class="o">(</span><span class="n">sampleSource</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class='line'>  <span class="n">ExoPlayer</span> <span class="n">player</span> <span class="o">=</span> <span class="n">ExoPlayer</span><span class="o">.</span><span class="na">Factory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">(</span><span class="n">numRenderer</span><span class="o">);</span>
</span><span class='line'>  <span class="n">player</span><span class="o">.</span><span class="na">prepare</span><span class="o">(</span><span class="n">videoRenderer</span><span class="o">,</span> <span class="n">audioRenderer</span><span class="o">);</span>
</span><span class='line'>  <span class="n">player</span><span class="o">.</span><span class="na">setPlayWhenReady</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>


<p>  <em>注意到，video 和 audio 的來源是同一個 URI，它也能來自不同的 URI，只需要分別給予兩個 FrameworkSampleSource object</em></p>

<ul>
<li><p><strong>ChunkSampleSource</strong> 提供 DASH or SmoothStreaming，未使用 MediaExtractor，而是自己實作 networking，buffering 和 media extraction</p>

<p>  它需要：</p>

<ul>
<li><strong>ChunkSource</strong> object，裡面包含 <strong>FormatEvaluator</strong> 和 <strong>DataSource</strong>

<ul>
<li>FormatEvaluator objects 會在每一塊 chunk 讀取前，去選擇有效的格式</li>
<li>DataSource objects 的任務就是去讀取資料</li>
</ul>
</li>
<li><strong>LoadControl</strong> object 可以控制 chunk 的 buffering 規則
<img src="http://developer.android.com/images/exoplayer/adaptive-streaming.png" alt="ChunkSampleSource" /></li>
</ul>
</li>
</ul>


<h4>Media presentation description parser</h4>

<p><strong>MediaPresentationDescriptionParser</strong> class to obtain <strong>Representation</strong> objects from media presentation description(MPD) files</p>

<h3>支援格式</h3>

<p>See <a href="http://developer.android.com/guide/appendix/media-formats.html">Supported Media Formats</a> for details</p>

<h3>參考資料</h3>

<p><a href="http://developer.android.com/guide/topics/media/exoplayer.html">ExoPlayer API Guide</a></p>

<p><a href="http://developer.android.com/guide/topics/media/exoplayer.htm://www.youtube.com/watch?v=92fgcUNCHic&amp;feature=youtube_gdata_player">Google I/O 2014 &ndash; Building great multi-media experiences on Android</a></p>

<p><a href="https://www.youtube.com/watch?v=6VjF638VObA">ExoPlayer: Adaptive video streaming on Android</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[52 Weeks of UX: Finding Flow]]></title>
    <link href="http://jasonni.github.io/blog/2014/07/21/52-weeks-of-ux-finding-flow/"/>
    <updated>2014-07-21T16:11:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2014/07/21/52-weeks-of-ux-finding-flow</id>
    <content type="html"><![CDATA[<h1>FINDING FLOW</h1>

<h2>文章摘要</h2>

<p>本篇文章是在描述 Optiaml Experience 狀態<br/>
是由 <a href="http://en.wikipedia.org/wiki/Mihaly_Csikszentmihalyi">Mihaly Csikszentmihalyi</a> 這位心理學教授<br/>
於 <a href="http://www.amazon.com/Flow-The-Psychology-Optimal-Experience/dp/0061339202">FLOW</a> 這本書中所提出<br/>
什麼時候會進入此狀態呢？</p>

<blockquote><blockquote><p>&ldquo;the mental state of operation<br/>
in which the person is fully immersed<br/>
in what he or she is doing by a feeling of energized focus,<br/>
full involvement,<br/>
and success in the process of the activity&rdquo;</p></blockquote></blockquote>

<p>其實就是只當一個人非常非常專注在一件事情上<br/>
並且事情進行的十分順利且成功的時候<br/>
此狀態就會開啟</p>

<p>此研究有趣的因素有兩個 <br/>
1. 之前的策略心理學大部分都是在研究有問題的人<br/>
   因此他採取相反地方法<br/>
   希望從成功的人身上找到可以複製的希望<br/>
2. 這研究適用於世界上所有的人，而不是只適用在愛因斯坦</p>

<p>又隨著軟體和硬體變得更容易使用<br/>
使得我們更可以專注在事情上面<br/>
而不用去煩惱設備的操作使用<br/>
例如 iPad 的發明<br/>
讓我們不用去煩惱視窗的操作<br/>
鍵盤的快捷鍵以及滑鼠使用等</p>

<p>因此，當一個設計達到一個程度上的簡約時<br/>
它和使用者的關係會發生改變<br/>
使用者有可能開始想要拿著它去作一些不一樣的事情<br/>
設計逐漸的消失在使用者的心中<br/>
可是卻大大的提升了使用經驗</p>

<p>最後<br/>
找尋心中的 FLOW 吧！</p>

<h2>心得</h2>

<p>FLOW 真是很玄的一個理論<br/>
有人稱他為 心流經驗 OR 流暢經驗 OR 神馳理論（囧）<br/>
台大心理系教授余德慧<br/>
在Csikszentmihalyi的Flow: The psychology of optimal experience中文版序中指出</p>

<blockquote><blockquote><p>心流出現時<br/>
會感受到行動與意識之間融合無間<br/>
整個意識的注意力集中在有限的視域<br/>
而行動的準確與立即的回饋有不斷互流的現象。</p></blockquote></blockquote>

<p>(這是不是EVA中的同步率啊XD)</p>

<p>生活上所有的事情<br/>
都有機會產生 FLOW <br/>
關鍵在於自己願不願意去投入的意志<br/>
當然<br/>
假如今天作的事情是自己有興趣且又是自己最拿手的<br/>
例如打籃球電慘對手<br/>
心流的產生想必更簡單<br/>
而設計在這邊扮演的角色<br/>
我想就是越簡單意用<br/>
意用到使用者根本就忘記了設計的存在<br/>
使他們可以完全沉浸在自己的創作世界裡面<br/>
那我想這就是一個最棒的設計了！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[52 Weeks of UX: Changing Existing Situations]]></title>
    <link href="http://jasonni.github.io/blog/2014/07/16/52-weeks-of-ux-changing-existing-situations/"/>
    <updated>2014-07-16T00:31:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2014/07/16/52-weeks-of-ux-changing-existing-situations</id>
    <content type="html"><![CDATA[<h1>CHANGING EXISTING SITUATIONS</h1>

<h2>文章概要</h2>

<p>本篇引述自人工智慧之父 <a href="http://digitized-life.blogspot.com/2011/08/blog-post_28.html#ixzz37YZvXbcG">Herbert Simon</a> 的一段話</p>

<blockquote><blockquote><p>&ldquo;Everyone designs
who devise courses of action aimed at changing existing situations into prefer ones. <br/>
The intellectual activity that produces material artifacts is no different fundamentally <br/>
from the one that prescribes remedies for a sick patient or<br/>
the one that devises a new sales plan for a company<br/>
or a social welfare policy for a state. <br/>
Design, so construed, is the core of all professional training; <br/>
it is the principal mark that distinguishes the professions from the sciences.&rdquo;</p></blockquote></blockquote>

<p>每個設法改變現狀，迎合己意的人都是在做設計。<br/>
每個生產材料人造物品的智慧活動沒有不一樣（？）<br/>
設計是專業訓練的核心<br/>
它是從科學去區分專業的重要標記</p>

<h2>心得</h2>

<p>又是一句很玄的話</p>

<p>不過大概可以理解為<br/>
當一個人對現狀不滿意或是無法滿足自己的需求<br/>
試圖去解決和改變現狀的行為<br/>
就是在做設計</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[52 Weeks of UX: Utility vs. Beauty]]></title>
    <link href="http://jasonni.github.io/blog/2014/07/11/52-weeks-of-ux-utility-vs-beauty/"/>
    <updated>2014-07-11T13:09:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2014/07/11/52-weeks-of-ux-utility-vs-beauty</id>
    <content type="html"><![CDATA[<h1>UTILITY VS. BEAUTY</h1>

<h2>文章概要</h2>

<p>此篇文章大概在描述<br/>
一個好的設計<br/>
要兼具實用和美觀</p>

<p>在做設計的時候<br/>
常常看起來美觀卻不實用<br/>
或是實用卻不美觀</p>

<p>甚至是使用浮華和華麗手法（現在的流行趨勢）<br/>
去隱藏設計的問題<br/>
導致太容易專注在 &ldquo;make it pretty&#8221;<br/>
卻沒有去考慮到這項設計的實用性</p>

<p>又或者<br/>
設計出一項非常實用的產品<br/>
可是看起來卻是枯燥又乏味</p>

<p>最優雅的設計是調和約束和精確度
並同時兼具實用和美觀</p>

<h2>心得</h2>

<p>在開發中<br/>
時常看到注重在實用性<br/>
例如提升產品穩定度<br/>
而忽略了美觀</p>

<p>不過很現實的<br/>
人是視覺動物<br/>
只要在產品中稍微加入了一點點美的元素<br/>
通常使用者都是會有反應的</p>

<p>所以一項好的設計<br/>
實用和美觀<br/>
都是不可或缺的</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Software Quality Attribute]]></title>
    <link href="http://jasonni.github.io/blog/2014/07/08/software-quality-attribute/"/>
    <updated>2014-07-08T18:44:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2014/07/08/software-quality-attribute</id>
    <content type="html"><![CDATA[<h1>Software Quality Attribute</h1>

<ul>
<li>Reusable &ndash; Templete pattern</li>
<li>Portability &ndash; Strategy pattern</li>
<li>Flexibility &ndash; Factory Method pattern</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Concurrency: ReentrantLock]]></title>
    <link href="http://jasonni.github.io/blog/2014/07/08/android-concurrency-reentrantlock/"/>
    <updated>2014-07-08T18:25:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2014/07/08/android-concurrency-reentrantlock</id>
    <content type="html"><![CDATA[<h1>ReentrantLock</h1>

<p>ReentrantLock uses the Ganga four bridge pattern</p>

<p>it provides mutual exclusion and implements the lock interface</p>

<ol>
<li><p>First, it inherits the bulk of its functionality from<br/>
the AbstractQueuedSynchronizer class which<br/>
provides a framework for implementing<br/>
blocking locks and synchronizers that<br/>
rely on First In, First Out or F.I.F.O.<br/>
wait queues.</p></li>
<li><p>Second, it implements several lock<br/>
acquisition models via its common<br/>
interface.</p></li>
<li><p>The key methods in ReentrantLock are lock,<br/>
lock interruptibly, and unlock.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Concurrency: ArrayBlockingQueue]]></title>
    <link href="http://jasonni.github.io/blog/2014/07/08/android-concurrency-arrayblockingqueue/"/>
    <updated>2014-07-08T17:47:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2014/07/08/android-concurrency-arrayblockingqueue</id>
    <content type="html"><![CDATA[<h1>ArrayBlockingQueue</h1>

<p>Arrayblockingqueue uses reentrantlocks and<br/>
conditionobjects to implement the<br/>
monitor object pattern.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Concurrency: CountDownLatch]]></title>
    <link href="http://jasonni.github.io/blog/2014/07/08/android-concurrency-countdownlatch/"/>
    <updated>2014-07-08T17:35:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2014/07/08/android-concurrency-countdownlatch</id>
    <content type="html"><![CDATA[<h1>CountDownLatch</h1>

<p>Java CountDownLatch class that<br/>
implements barrier synchronization.</p>

<p>A barrier is a synchronization technique<br/>
that halts the<br/>
progress of one or more threads at a<br/>
particular point.</p>

<p>Barriers are commonly used in several ways.</p>

<p>One way is to defer the start of<br/>
current computations until after an object<br/>
has been initialized.</p>

<p>Another common use is to allow one thread<br/>
to wait until a group<br/>
of other concurrent threads are done with<br/>
their processing before it can continue.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[52 Weeks of UX: The First Rule of UX]]></title>
    <link href="http://jasonni.github.io/blog/2014/07/01/52-weeks-of-ux-the-first-rule-of-ux/"/>
    <updated>2014-07-01T18:56:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2014/07/01/52-weeks-of-ux-the-first-rule-of-ux</id>
    <content type="html"><![CDATA[<h1>THE FIRST RULE OF UX</h1>

<blockquote><blockquote><p>“You cannot not communicate.
Every behaviour is a kind of communication.
Because behaviour does not have a counterpart (there is no anti-behaviour),
it is not possible not to communicate.”
—<a href="http://en.wikipedia.org/wiki/Paul_Watzlawick">Paul Watzlawick</a>’s First Axiom of Communication</p></blockquote></blockquote>

<h2>文章概要</h2>

<p>溝通 <br/>
是 UX 得第一個原則<br/>
一個好的設計師<br/>
會使用例如<br/>
copy-writing(?)，文字的顏色，標題得對齊方式，全部大或小寫的導航連結等<br/>
去傳達想要表達的意思</p>

<p>所以我們可以時常問</p>

<blockquote><blockquote><p>“Does this element support or contradict what I am trying to communicate to the user?”</p></blockquote></blockquote>

<p>來幫助自己找到經常沒注意或忽略的事<br/>
從而去完善和改進他<br/>
最終提升了 User Experience</p>

<hr />

<h2>心得</h2>

<p>可能是英文底子不夠好的關係<br/>
一直無法領悟文章的精髓</p>

<p>一開始以為<br/>
溝通<br/>
應該是建立在多方之間的行為<br/>
所以文章應該會描述如何和使用者作互動之類</p>

<p>不過看來看去<br/>
好像都沒有和使用者有關係</p>

<p>反而好像是在講述<br/>
該如何做好事前的溝通準備<br/>
例如使用<br/>
copy-writing，文字的顏色，標題得對齊方式，全部大或小寫的導航連結等<br/>
並反問自己這個元素是否可以讓使用者感受到我想表達的意思</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JS Text Range selector]]></title>
    <link href="http://jasonni.github.io/blog/2013/09/10/js-text-range-selector/"/>
    <updated>2013-09-10T16:58:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2013/09/10/js-text-range-selector</id>
    <content type="html"><![CDATA[<p>今天需要用到文字選取<br/>
情境是<br/>
當使用者需要更改檔案名稱時<br/>
直接將檔名反白選取<br/>
這樣也可以避免改到附檔名<br/>
如圖：<br/>
 <img src="http://goo.gl/01sWwx" title="demo" alt="demo" />
程式碼：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Text Range Selector</span>
</span><span class='line'><span class="cm">     *</span>
</span><span class='line'><span class="cm">     * @param   {Element}   element</span>
</span><span class='line'><span class="cm">     * @param   {Integer}   start</span>
</span><span class='line'><span class="cm">     * @param   {Integer}   end</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">select</span> <span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">start</span><span class="p">,</span> <span class="nx">end</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">element</span> <span class="o">=</span> <span class="nx">element</span> <span class="k">instanceof</span> <span class="nx">jQuery</span> <span class="o">?</span> <span class="nx">element</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="o">:</span> <span class="nx">element</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">end</span> <span class="o">=</span> <span class="nx">end</span> <span class="o">===</span> <span class="o">-</span><span class="mi">1</span> <span class="o">?</span> <span class="nx">element</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span> <span class="o">:</span> <span class="nx">end</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">element</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span>
</span><span class='line'>        <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">element</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">range</span> <span class="o">=</span> <span class="nx">element</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nx">win</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;msie&quot;</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">start</span> <span class="o">=</span> <span class="nx">element</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">start</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\r/g</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>                    <span class="nx">end</span> <span class="o">=</span> <span class="nx">element</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">end</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\r/g</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">range</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">range</span><span class="p">.</span><span class="nx">moveStart</span><span class="p">(</span><span class="s1">&#39;character&#39;</span><span class="p">,</span> <span class="nx">start</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">range</span><span class="p">.</span><span class="nx">moveEnd</span><span class="p">(</span><span class="s1">&#39;character&#39;</span><span class="p">,</span> <span class="nx">end</span> <span class="o">-</span> <span class="nx">start</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="nx">range</span><span class="p">.</span><span class="nx">select</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">element</span><span class="p">.</span><span class="nx">setSelectionRange</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">element</span><span class="p">.</span><span class="nx">setSelectionRange</span><span class="p">(</span><span class="nx">start</span><span class="p">,</span> <span class="nx">end</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JQuery Range Selector With ShiftKey]]></title>
    <link href="http://jasonni.github.io/blog/2013/09/10/jquery-range-selector-with-shiftkey/"/>
    <updated>2013-09-10T16:56:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2013/09/10/jquery-range-selector-with-shiftkey</id>
    <content type="html"><![CDATA[<p>A simple, fast lightweight jQuery plugin for multi-select checkbox with shift key.
Why fast ??
Because the id is the fastest selector we know it.</p>

<p>The Demo page please check
<a href="http://jasonni.github.io/rangeselector/">http://jasonni.github.io/rangeselector/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[amazing box sizing]]></title>
    <link href="http://jasonni.github.io/blog/2013/08/16/amazing-box-sizing/"/>
    <updated>2013-08-16T12:02:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2013/08/16/amazing-box-sizing</id>
    <content type="html"><![CDATA[<p>最近做了一個兩欄式 layout<br/>
左邊欄嵌入 iframe<br/>
右邊欄分為上和下兩塊<br/>
在 chrome 和 ie 上都顯示的十分幸福美好<br/>
可是到 firefox 上時<br/>
發現 iframe 被擠下去了囧<br/>
和 @Vivian 大神研究之後<br/>
發現是 firefox 在計算 width 的方式和其他不同<br/>
例如<br/>
width 為 235px<br/>
padding 為 25px<br/>
padding 理當和 width 不會有關係<br/>
可是在 firefox 裡<br/>
width 變成 260px 了囧<br/>
好吧&hellip;.front end 就是在解決這種問題的<br/>
解法就是在右邊欄加入<br/>
box-sizing: border-box</p>

<p>之後一切又回歸幸福美滿</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RequireJS Study Guideline]]></title>
    <link href="http://jasonni.github.io/blog/2013/06/02/requirejs-study-guideline/"/>
    <updated>2013-06-02T00:51:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2013/06/02/requirejs-study-guideline</id>
    <content type="html"><![CDATA[<h3>Directory Structure</h3>

<pre><code>www
|—-index.html
|—-js
|   |---main.js
|
|--css
|   |---main.scss
|
|--img
|—–lib
    |———jquery/jquery-min.js
    |———requirejs/require.js
    |———bootstrap/bootstrap.js
</code></pre>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>
</span><span class='line'><span class="nx">requirejs</span><span class="p">.</span><span class="nx">config</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">baseUrl</span><span class="o">:</span> <span class="nx">lib</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">paths</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">jquery</span><span class="o">:</span> <span class="nx">jquery</span><span class="o">/</span><span class="nx">jquery</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">main</span><span class="o">:</span> <span class="p">..</span><span class="o">/</span><span class="nx">js</span><span class="o">/</span><span class="nx">main</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">shim</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">bootstrap</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;jquery&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>待續&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jquery Validation With Bootstrap Style]]></title>
    <link href="http://jasonni.github.io/blog/2013/06/01/jquery-validation-with-bootstrap-style/"/>
    <updated>2013-06-01T13:42:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2013/06/01/jquery-validation-with-bootstrap-style</id>
    <content type="html"><![CDATA[<p>最近因工作需要開始研究 <a href="http://jqueryvalidation.org/" title="jqueryvalidation">Jquery Validation</a><br/>
不過因為我們導入 <a href="http://twitter.github.io/bootstrap/" title="bootstrap">Bootstrap</a><br/>
因此它產生訊息提示的 style 還得覆寫一下<br/>
才能符合我們的需求<br/>
看一下 <a href="http://jasonni.github.io/prototype/jq_validate.html" title="Demo">Demo</a></p>

<p>在實作上<br/>
各欄位驗證的屬性設定可以參考<a href="http://jqueryvalidation.org/" title="jqueryvalidation">Jquery Validation</a> Document<br/>
除了 html class 要符合 <a href="http://twitter.github.io/bootstrap/" title="bootstrap">Bootstrap</a> 規範外<br/>
其中需要注意的是<br/>
* 若 form 裡有 radio 或 checkbox 時，一定要去覆寫 errorPlacement，
否則驗證訊息會出現在錯誤的位置
* 驗證欄位可以寫在 html class 或 js，若寫在 js 不能寫 form 裡沒有的欄位，否則 bug 會找不到噢 XD</p>

<p>再來就是要去覆寫 js 的 function 來達到我們的需求</p>

<!-- more -->




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// default is label</span>
</span><span class='line'><span class="nx">errorElement</span><span class="o">:</span> <span class="s1">&#39;span&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 將 message class 換成 bootstrap style</span>
</span><span class='line'><span class="nx">errorClass</span><span class="o">:</span> <span class="s1">&#39;help-inline&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 驗證錯誤時要替換的 class</span>
</span><span class='line'><span class="nx">highlight</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nx">element</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s1">&#39;.control-group&#39;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span> <span class="s1">&#39;info&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 驗證成功時要替換的 class</span>
</span><span class='line'><span class="nx">success</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nx">element</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s1">&#39;.control-group&#39;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;info&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 判斷 form 裡是否有 radio or checkbox</span>
</span><span class='line'><span class="nx">errorPlacement</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">element</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">element</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s1">&#39;:checkbox&#39;</span><span class="p">)</span> <span class="o">||</span> <span class="nx">element</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s1">&#39;:radio&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">controls</span> <span class="o">=</span> <span class="nx">element</span><span class="p">.</span><span class="nx">closest</span><span class="p">(</span><span class="s1">&#39;.controls&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">controls</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;:checkbox,:radio&#39;</span><span class="p">).</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>           <span class="nx">controls</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">error</span><span class="p">.</span><span class="nx">insertAfter</span><span class="p">(</span><span class="nx">element</span><span class="p">.</span><span class="nx">nextAll</span><span class="p">(</span><span class="s1">&#39;.lbl&#39;</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">error</span><span class="p">.</span><span class="nx">insertAfter</span><span class="p">(</span><span class="nx">element</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[div into label tag]]></title>
    <link href="http://jasonni.github.io/blog/2013/05/26/dive-into-label-tag/"/>
    <updated>2013-05-26T19:48:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2013/05/26/dive-into-label-tag</id>
    <content type="html"><![CDATA[<p>之前看到 <strong>label</strong> 時<br/>
被它的 <strong>for</strong> 屬性驚到原來可以<a href="http://jasonni.github.io/blog/2013/05/11/html-and-css-todo-list/">這樣用</a>  <br/>
直到和 <a href="http://josephj.com/" title="阿嗚">Joseph大神</a> pair programming  <br/>
才發現到它真正的迷人之處<br/>
也解決了許久許久之前常聽到有使用者反應<br/>
<strong>為什麼你們系統的 radio 和 checkbox 這麼小</strong><br/>
我都點不到 XD<br/>
那時得到的解答是：本來預設就是這樣！！<br/>
不過<br/>
今天終於得到真正的答案<br/>
就是搭配 <strong>label</strong> 這屬性</p>

<p>Demo 開始</p>

<!-- more -->


<p><a class="jsbin-embed" href="http://jsbin.com/ebuwib/4/embed?live">Label Demo</a><script src="http://static.jsbin.com/js/embed.js"></script></p>

<p>HTML Code</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>
</span><span class='line'><span class="c">&lt;!-- </span>
</span><span class='line'><span class="c">    input 須搭配 for 屬性才能做到focus</span>
</span><span class='line'><span class="c">    radio 和 checkbox 若用label包住就不用加 for</span>
</span><span class='line'><span class="c">    否則一樣要加</span>
</span><span class='line'><span class="c"> --&gt;</span>
</span><span class='line'><span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">&quot;cname&quot;</span><span class="nt">&gt;</span>Click_me_Name<span class="nt">&lt;/label&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">&quot;cname&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;label&gt;</span>Sex<span class="nt">&lt;/label&gt;</span>
</span><span class='line'><span class="nt">&lt;label&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">&quot;sex&quot;</span>  <span class="na">type=</span><span class="s">&quot;radio&quot;</span><span class="nt">/&gt;</span>Click_me_Male
</span><span class='line'><span class="nt">&lt;/label&gt;</span>
</span><span class='line'><span class="nt">&lt;label&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">&quot;sex&quot;</span> <span class="na">type=</span><span class="s">&quot;radio&quot;</span><span class="nt">/&gt;</span>Click_me_Female
</span><span class='line'><span class="nt">&lt;/label&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- 不用加for --&gt;</span>
</span><span class='line'><span class="nt">&lt;label&gt;</span>Hobby<span class="nt">&lt;/label&gt;</span>
</span><span class='line'><span class="nt">&lt;label&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span><span class="nt">/&gt;</span>Click_me_Java
</span><span class='line'><span class="nt">&lt;/label&gt;</span>
</span><span class='line'><span class="nt">&lt;label&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span><span class="nt">/&gt;</span>Click_me_PHP
</span><span class='line'><span class="nt">&lt;/label&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- 需加for --&gt;</span>
</span><span class='line'><span class="nt">&lt;label&gt;</span>Food<span class="nt">&lt;/label&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">&quot;sushi&quot;</span> <span class="na">name=</span><span class="s">&quot;food&quot;</span> <span class="na">type=</span><span class="s">&quot;radio&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">&quot;sushi&quot;</span><span class="nt">&gt;</span>Click_me_Sushi<span class="nt">&lt;/label&gt;</span>
</span><span class='line'><span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">&quot;noodle&quot;</span> <span class="na">name=</span><span class="s">&quot;food&quot;</span> <span class="na">type=</span><span class="s">&quot;radio&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">&quot;noodle&quot;</span><span class="nt">&gt;</span>Click_me_Noodle<span class="nt">&lt;/label&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>很簡單<br/>
卻也解決了使用者心中的痛<br/>
造就更棒的使用者體驗</p>

<p>這就是<strong>前端工程師</strong></p>

<p>歡迎加入 <a href="http://fb.f2d.tw/">Front-End Developers Taiwan</a><br/>
一起討論前端議題！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML &amp; CSS Todo List]]></title>
    <link href="http://jasonni.github.io/blog/2013/05/11/html-and-css-todo-list/"/>
    <updated>2013-05-11T14:18:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2013/05/11/html-and-css-todo-list</id>
    <content type="html"><![CDATA[<p>將<a href="http://miiicasa.com/" title="miiiCasa">miiiCasa</a>目前學到的新手訓練<br/>
實作了一張 <a href="http://jasonni.github.io/prototype/html_css_todolist.html" title="Demo">HTML CSS Todo List</a> 靜態網頁</p>

<p>之所以想做 Todo List 的原因<br/>
是因為網路上操作其實大多脫離不了<em>新刪查改</em></p>

<p>所以假如在學習一個新的Framework時<br/>
可以搞懂<strong>新刪查改</strong>的使用方式<br/>
大概也掌握了6, 7成</p>

<p>因此做了一個 Todo List<br/>
希望每學到一個新的東西時<br/>
就用 Todo List 實作一下 XD</p>

<hr />

<h4><a href="http://www.kvzhuang.net/" title="小莊">小莊大師</a>魔鬼細節的指導</h4>

<h4><em>input: placeholder</em> 以及 <em>label: for</em> 的優雅之處</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">&quot;todo&quot;</span><span class="nt">&gt;</span>代辦事項<span class="nt">&lt;/label&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">id=</span><span class="s">&quot;todo&quot;</span> <span class="na">placeholder=</span><span class="s">&quot;enter something todo&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p><em><a href="http://www.w3schools.com/tags/att_input_placeholder.asp" title="w3c input">input: placeholder</a></em> 的優雅之處在於<br/>
* 描述會直接秀在text裡面<br/>
* 點進去輸入時會自己刪除<br/>
* 不輸入則又會出現<br/>
* 新瀏覽器皆支援, IE9還是只能自己刻(囧)</p>

<p><em><a href="http://www.w3schools.com/tags/att_label_for.asp" title="w3c label">label: for</a></em> 的優雅之處在於<br/>
* 當 for 的 id 等於 input 的 id 時, 點 label 會自動 focus 到 input<br/>
* 全瀏覽器支援, 太讚了</p>

<p>Demo: <a href="http://jasonni.github.io/prototype/html_css_todolist.html" title="Demo">HTML CSS Todo List</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[about me]]></title>
    <link href="http://jasonni.github.io/blog/2013/05/09/about-me/"/>
    <updated>2013-05-09T17:06:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2013/05/09/about-me</id>
    <content type="html"><![CDATA[<p style="text-align: center; white-space: pre; color: #93a1a1;">
JasonNi, 前端工程師
現任職於 <a href="http://miiicasa.com/">miiicasa</a>, TW
熱愛 新技術, 美食  
<em>Hacking Everything</em>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[markdown demo]]></title>
    <link href="http://jasonni.github.io/blog/2013/05/09/hello-world/"/>
    <updated>2013-05-09T10:31:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2013/05/09/hello-world</id>
    <content type="html"><![CDATA[<p>First post just try how to use markdown language and change the theme.</p>

<h3>Markdown Test:</h3>

<h4>Unordered List</h4>

<pre><code>* unordered
</code></pre>

<ul>
<li>unordered</li>
<li>unordered</li>
<li>unordered</li>
</ul>


<h3>Split</h3>

<pre><code>*** is split
</code></pre>

<hr />

<h4>Ordered List</h4>

<pre><code>1. ordered list
</code></pre>

<ol>
<li>ordered list</li>
<li>ordered list</li>
<li>ordered list</li>
</ol>


<hr />

<!-- more -->


<h4>Blockquote</h4>

<pre><code>&gt; # This is a blockquote (h1)
&gt;
&gt;&gt; This is a blockquote
&gt;
&gt; Back to the first level
</code></pre>

<blockquote><h1>This is a blockquote (h1)</h1>

<blockquote><p>This is a sub blockquote</p></blockquote>

<p>Back to the first level</p></blockquote>

<hr />

<h4>Hyper Link</h4>

<pre><code>Welcome to [miiiCasa].
[miiiCasa]: http://miiicasa.com/ "miiiCasa"
</code></pre>

<p>Welcome to <a href="http://miiicasa.com/" title="miiiCasa">miiiCasa</a>.</p>

<hr />

<h4>Emphasis</h4>

<pre><code>*em*
**strong**
</code></pre>

<p><em>em</em>
<strong>strong</strong></p>

<hr />

<h3>Image</h3>

<pre><code>![Alt text][miiiCasaImg]
[miiiCasaImg]: http://a.mimgs.com/index/common/logo_173x44.png "Welcome to miiiCasa"
</code></pre>

<p><img src="http://a.mimgs.com/index/common/logo_173x44.png" title="Welcome to miiiCasa" alt="Alt text" /></p>

<hr />

<h4>Demo Img Hyper Link</h4>

<pre><code>[ ![Alt text][miiiCasaImg] ][miiiCasa]
[miiiCasa]: http://miiicasa.com/ "miiiCasa"
[miiiCasaImg]: http://a.mimgs.com/index/common/logo_173x44.png "Welcome to miiiCasa"
</code></pre>

<p><a href="http://miiicasa.com/" title="miiiCasa"><img src="http://a.mimgs.com/index/common/logo_173x44.png" title="Welcome to miiiCasa" alt="Alt text" /></a></p>

<hr />

<h4>Reference:</h4>

<p><a href="http://daringfireball.net/projects/markdown/" title="By JOHN GRUBER">markdown document</a><br/>
<a href="http://markdown.tw/" title="markdown.tw">markdown.tw</a><br/>
<a href="http://learn.cute.edu.tw/modl/help.php?file=advanced_markdown.html" title="proMarkdown">markdown 的進階用法</a></p>
]]></content>
  </entry>
  
</feed>
