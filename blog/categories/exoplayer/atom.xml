<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: exoplayer, | F2E Big Bang !!!]]></title>
  <link href="http://jasonni.github.io/blog/categories/exoplayer/atom.xml" rel="self"/>
  <link href="http://jasonni.github.io/"/>
  <updated>2014-08-05T16:07:38+08:00</updated>
  <id>http://jasonni.github.io/</id>
  <author>
    <name><![CDATA[Jason Ni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ExoPlayer 筆記]]></title>
    <link href="http://jasonni.github.io/blog/2014/08/05/exoplayer-bi-ji/"/>
    <updated>2014-08-05T15:21:00+08:00</updated>
    <id>http://jasonni.github.io/blog/2014/08/05/exoplayer-bi-ji</id>
    <content type="html"><![CDATA[<p>ExoPlayer
<img src="/images/exo_open_url.png" alt="exoplayer-url" /></p>

<h3>MeidaPlayer vs. ExoPlayer</h3>

<ul>
<li>Youtube and Play Movie use.</li>
<li>ExoPlayer gives a lot more control.</li>
<li>ExoPlayer can easily update.</li>
</ul>


<p><img src="/images/exo_vs_mplayer.png" alt="exo vs mediaplayer" /></p>

<h3>核心</h3>

<p><a href="http://developer.android.com/reference/android/media/MediaExtractor.html">MediaExtractor</a>
and
<a href="http://developer.android.com/reference/android/media/MediaCodec.html">MediaCodec</a></p>

<p><img src="/images/exoplayer_framework.png" alt="exoplayer-framework" />
<img src="http://developer.android.com/images/exoplayer/object-model.png" alt="exoplayer-model" /></p>

<h3>支援 Adaptive Streaming</h3>

<p>允許在播放的期間，依照網路速度同整影片的品質</p>

<ul>
<li>Dynamic adaptive streaming over HTTP (DASH)</li>
<li>SmoothStreaming</li>
<li>Persistent caching</li>
</ul>


<h3>提供</h3>

<h4>TrackRenderer</h4>

<p>An abstract class processes a component of media for playback, such as video, audio or text.</p>

<p>The ExoPlayer library provides these implements class:</p>

<ul>
<li><strong>MediaCodecVideoTrackRenderer</strong> as the default implementations rendering video</li>
<li><strong>MediaCodecAudioTrackRenderer</strong> for audio.</li>
<li><strong>TextTrackRenderer</strong> for text.</li>
</ul>


<h4>SampleSource</h4>

<p>TrackRenderer required <strong>SampleSource</strong> (interface).
It provides <em>format information</em> and <em>media samples to be rendered</em></p>

<p>The ExoPlayer library provides these implements class:</p>

<ul>
<li><strong>FrameworkSampleSource</strong> uses MediaExtractor to request, buffer and extract the media samples.<img src="http://developer.android.com/images/exoplayer/frameworksamplesource.png" alt="FrameworkSampleSource" />
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">FrameworkSampleSource</span> <span class="n">sampleSource</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FrameworkSampleSource</span><span class="o">(</span><span class="n">activity</span><span class="o">,</span> <span class="n">uri</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
</span><span class='line'><span class="n">MediaCodecVideoTrackRenderer</span> <span class="n">videoRenderer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MediaCodecVideoTrackRenderer</span><span class="o">(</span><span class="n">sampleSource</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="n">MediaCodec</span><span class="o">.</span><span class="na">VIDEO_SCALING_MODE_SCALE_TO_FIT</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">mainHandler</span><span class="o">,</span> <span class="n">playerActivity</span><span class="o">,</span> <span class="mi">50</span><span class="o">);</span>
</span><span class='line'><span class="n">MediaCodecAudioTrackRenderer</span> <span class="n">audioRenderer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MediaCodecAudioTrackRenderer</span><span class="o">(</span><span class="n">sampleSource</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></li>
</ul>


<blockquote><p>Note that in the example, video and audio are muxed, meaning they are streamed together from a single URI.
<em>It is also possible to play demuxed media, where video and audio are streamed separately from different URIs.</em>
This functionality can be achieved by having two FrameworkSampleSource instances instead of one.</p></blockquote>

<ul>
<li><strong>ChunkSampleSource</strong> provides adaptive playback using DASH or SmoothStreaming, and implements networking, buffering and media extraction. It requires:

<ul>
<li>A <strong>ChunkSource</strong> object, implementations require a <strong>FormatEvaluator</strong> and a <strong>DataSource</strong>

<ul>
<li>The FormatEvaluator objects select from the available formats before each chunk is loaded.</li>
<li>The DataSource objects are responsible for actually loading the data.</li>
</ul>
</li>
<li>A LoadControl object that controls the chunk buffering policy. <img src="http://developer.android.com/images/exoplayer/adaptive-streaming.png" alt="ChunkSampleSource" /></li>
</ul>
</li>
</ul>


<h4>Media presentation description parser</h4>

<p><strong>MediaPresentationDescriptionParser</strong> class to obtain <strong>Representation</strong> objects from media presentation description(MPD) files.</p>

<h3>支援格式</h3>

<p>See <a href="http://developer.android.com/guide/appendix/media-formats.html">Supported Media Formats</a> for details.</p>

<h3>參考資料</h3>

<p><a href="http://developer.android.com/guide/topics/media/exoplayer.html">ExoPlayer API Guide</a></p>

<p><a href="http://developer.android.com/guide/topics/media/exoplayer.htm://www.youtube.com/watch?v=92fgcUNCHic&amp;feature=youtube_gdata_player">Google I/O 2014 &ndash; Building great multi-media experiences on Android</a></p>
]]></content>
  </entry>
  
</feed>
